generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Deal {
  buy
  rent
}

enum Property {
  house
  banglow
  apartment
  land
}
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String   @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
  posts     Post[]
  savedPosts SavedPost[]

  chats      Chat[]      @relation(fields: [chatIDs], references: [id])
  chatIDs    String[]    @db.ObjectId
}

model Post {
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  price     Int
  property  Property
  bathrooms Int
  images    String[]
  address   String
  city      String
  latitude  String
  longitude String
  createdAt DateTime @default(now())
  postDetail PostDetail?
  savedPosts SavedPost[]
}

model PostDetail {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  desc String
  utilities String?
  pet String?
  income String?
  size String?
  school Int?
  bus Int?
  restaurant Int?
  post Post @relation(fields: [postId], references: [id])
  postId String @db.ObjectId @unique
}

model Chat {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  users     User[]    @relation(fields: [userIDs], references: [id])
  userIDs   String[]  @db.ObjectId
  createdAt DateTime  @default(now())
  seenBy    String[]  @db.ObjectId
  messages  Message[]
  lastMessage String?
}
model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  userId    String
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String   @db.ObjectId
  createdAt DateTime @default(now())
}

model SavedPost {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  user User @relation(fields:[userId], references: [id])
  post Post @relation(fields:[postId], references: [id])
  userId String @db.ObjectId @unique
  postId String @db.ObjectId @unique

  @@unique([userId, postId])
}